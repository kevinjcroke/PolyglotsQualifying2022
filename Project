using System.IO;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq;

namespace polyglots.practice._2022
{
    class Project
    {
        public String name { get; set; }
        public int duration { get; set; }
        public int score { get; set; }
        public int bestBefore { get; set; }
        public Dictionary<String, int> roles { get; set; } = new Dictionary<String, int>();

        public bool canComplete( ContributorDictionary contributors )
        {
            List<Contributor> team = new List<Contributor>();
            List<String> coveredSkills = new List<String>();

            foreach ( var role in roles ) {
                foreach ( var contributor in contributors.contributors ) {
                    if ( !team.Contains ( role.Key ) && contributor.GetSkillLevel( role.Key ) >= role.Value ) {
                        team.Add( contributor );
                        coveredSkills.Add( role.Key );
                    }
                }
            }

            if ( coveredSkills.Count() = roles.Count() ) { 
                return true;
            } else { 
                return false;
            }
        }

        public bool canCompleteBestBefore(int day)
        {
            return false;
        }

        public 
    }
}
